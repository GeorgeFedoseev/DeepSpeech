{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sess",
				"session_config\tstatement"
			],
			[
				"dow",
				"download_url\tstatement"
			],
			[
				"ret",
				"retry_cnt\tstatement"
			],
			[
				"fil",
				"filename\tstatement"
			],
			[
				"p",
				"path"
			],
			[
				"try",
				"try\tTry/Except"
			],
			[
				"vo",
				"voxforge_url"
			],
			[
				"sou",
				"source_len\tstatement"
			],
			[
				"targ",
				"target_len\tstatement"
			],
			[
				"P",
				"PROCESSING_CSV_FILE\tstatement"
			],
			[
				"rem",
				"remove_video_from_all\tfunction"
			],
			[
				"pr",
				"PROCESSING_CSV_FILE\tstatement"
			],
			[
				"is",
				"is_item_in_csv\tfunction"
			],
			[
				"csv",
				"csv_path"
			],
			[
				"no",
				"not_fully_processed_last_time"
			],
			[
				"appe",
				"append_column_to_csv\tfunction"
			],
			[
				"get",
				"get_column_csv\tfunction"
			],
			[
				"wr",
				"writerow"
			],
			[
				"colu",
				"column\tstatement"
			],
			[
				"col",
				"column_index\tparam"
			],
			[
				"pu",
				"put_video_to_processing\tfunction"
			],
			[
				"pop",
				"pop_first_row_in_csv\tfunction"
			],
			[
				"firs",
				"first_row\tstatement"
			],
			[
				"cs",
				"csv_path\tparam"
			],
			[
				"put",
				"put_item_to_csv"
			],
			[
				"row",
				"row_list"
			],
			[
				"sear",
				"search_response\tstatement"
			],
			[
				"out",
				"output_fragment_path\tparam"
			],
			[
				"trace",
				"traceback\tmodule"
			],
			[
				"u",
				"utf-8"
			],
			[
				"check",
				"check_output\tfunction"
			],
			[
				"subs",
				"subs_cleared_count\tstatement"
			],
			[
				"stats",
				"stats_speech_correspondance_so_subs_quality\tstatement"
			],
			[
				"sp",
				"speech_end\tstatement"
			],
			[
				"spee",
				"speech_start\tstatement"
			],
			[
				"wa",
				"wav_path\tstatement"
			],
			[
				"inter",
				"intervals\tstatement"
			],
			[
				"exc",
				"format_exc\tfunction"
			],
			[
				"aud",
				"audio_fragment_path\tstatement"
			],
			[
				"speech",
				"speech_end\tstatement"
			],
			[
				"co",
				"convert_windows_to_readible_labels\tfunction"
			],
			[
				"ur",
				"urllib\tmodule"
			],
			[
				"pri",
				"print_exc\tfunction"
			],
			[
				"vide",
				"video_id\tstatement"
			],
			[
				"a",
				"append\tfunction"
			],
			[
				"thread",
				"threads\tstatement"
			],
			[
				"ite",
				"item\tstatement"
			],
			[
				"sta",
				"stats_processed_videos_count\tstatement"
			],
			[
				"pa",
				"path\tmodule"
			],
			[
				"fram",
				"fragment_duration\tstatement"
			],
			[
				"cont",
				"continue\tkeyword"
			],
			[
				"con",
				"continue\tkeyword"
			],
			[
				"fra",
				"fragment_duration\tstatement"
			],
			[
				"video",
				"video_id\tparam"
			],
			[
				"write",
				"writerow"
			],
			[
				"sub",
				"subtitles"
			],
			[
				"vi",
				"video_id\tstatement"
			],
			[
				"cu",
				"curr_dir_path"
			],
			[
				"su",
				"subtitles"
			],
			[
				"im",
				"image_to_string\tfunction"
			],
			[
				"c",
				"chrome\tmodule"
			],
			[
				"full",
				"fullpage_screenshot"
			],
			[
				"decode",
				"decodestring\tfunction"
			],
			[
				"get_sc",
				"get_screenshot_as_png\tfunction"
			],
			[
				"ch",
				"chrome\tstatement"
			],
			[
				"sele",
				"selenium\tmodule"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Dockerfile",
			"settings":
			{
				"buffer_size": 5412,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "DeepSpeech.py",
			"settings":
			{
				"buffer_size": 83098,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "# Need devel version cause we need /usr/include/cudnn.h \n# for compiling libctc_decoder_with_kenlm.so\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\n\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        wget \\\n        git \\\n        python \\\n        python-dev \\\n        python-pip \\\n        python-wheel \\\n        python-numpy \\\n        libcurl3-dev  \\\n        ca-certificates \\\n        gcc \\\n        sox \\\n        libsox-fmt-mp3 \\\n        htop \\\n        nano \\\n        swig \\\n        cmake \\\n        libboost-all-dev \\\n        zlib1g-dev \\\n        libbz2-dev \\\n        liblzma-dev \\\n        locales \\\n        pkg-config \\\n        libsox-dev \\\n        ffmpeg  \n\n\n\n# <BUILD TensorFlow+XLA\n# build TensoFlow from Mozilla repo with XLA\n\n\nRUN git clone https://github.com/mozilla/tensorflow/\nWORKDIR /tensorflow\nRUN git checkout r1.6\n\n\n\n# install Bazel\nRUN apt-get install -y openjdk-8-jdk\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list\nRUN curl https://bazel.build/bazel-release.pub.gpg | apt-key add -\nRUN apt-get update && apt-get install -y bazel && apt-get upgrade -y bazel\n\n\n# install GPU stuff\nRUN apt-get install -y cuda-command-line-tools-9-0 \n\n\n# configure Tensorflow Build\n\n# GPU Environment Setup\nENV TF_NEED_CUDA 1\nENV CUDA_TOOLKIT_PATH /usr/local/cuda\nENV CUDA_PKG_VERSION 9-0=9.0.176-1\nENV CUDA_VERSION 9.0.176\nENV TF_CUDA_VERSION 9.0\nENV TF_CUDNN_VERSION 7.1.2\nENV CUDNN_INSTALL_PATH /usr/lib/x86_64-linux-gnu/\nENV TF_CUDA_COMPUTE_CAPABILITIES 6.0\n\n# Common Environment Setup\nENV TF_BUILD_CONTAINER_TYPE GPU\nENV TF_BUILD_OPTIONS OPT\nENV TF_BUILD_DISABLE_GCP 1\nENV TF_BUILD_ENABLE_XLA 1\nENV TF_BUILD_PYTHON_VERSION PYTHON2\nENV TF_BUILD_IS_OPT OPT\nENV TF_BUILD_IS_PIP PIP\n\n# Other Parameters\nENV CC_OPT_FLAGS -mavx -mavx2 -msse4.1 -msse4.2 -mfma\nENV TF_NEED_GCP 0\nENV TF_NEED_HDFS 0\nENV TF_NEED_JEMALLOC 1\nENV TF_NEED_OPENCL 0\nENV TF_CUDA_CLANG 0\nENV TF_NEED_MKL 0\nENV TF_ENABLE_XLA 1\nENV PYTHON_BIN_PATH /usr/bin/python2.7\nENV PYTHON_LIB_PATH /usr/lib/python2.7/dist-packages\n\n\n\n# link DeepSpeech native_client libs to tf folder\nCOPY . /DeepSpeech/\n\nRUN ln -s /DeepSpeech/native_client /tensorflow\n\nWORKDIR /DeepSpeech\n\nRUN wget https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN pip --no-cache-dir install -r requirements.txt\n\n\nWORKDIR /tensorflow\n\n\n\n\n# Running bazel inside a `docker build` command causes trouble, cf:\n#   https://github.com/bazelbuild/bazel/issues/134\n# The easiest solution is to set up a bazelrc file forcing --batch.\nRUN echo \"startup --batch\" >>/etc/bazel.bazelrc\n# Similarly, we need to workaround sandboxing issues:\n#   https://github.com/bazelbuild/bazel/issues/418\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" \\\n    >>/etc/bazel.bazelrc\n\n\n# fix for failing bazel TF build\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1\n\n# fix\nRUN cp /usr/include/cudnn.h /usr/local/cuda/include/cudnn.h\n\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/lib/x86_64-linux-gnu/:/usr/local/cuda/lib64/stubs/\n\n# BUILD\n# passing LD_LIBRARY_PATH is required cause Bazel doesnt pickup it from env\n\n\n\n# need add --config=cuda?\nRUN bazel build --config=opt --config=cuda -c opt --copt=-O3 //native_client:libctc_decoder_with_kenlm.so  --verbose_failures --action_env=LD_LIBRARY_PATH=${LD_LIBRARY_PATH}\n\n# need add --config=cuda?\nRUN bazel build --config=monolithic -c opt --copt=-O3 --copt=-fvisibility=hidden //native_client:libdeepspeech.so //native_client:deepspeech_utils //native_client:generate_trie --verbose_failures --action_env=LD_LIBRARY_PATH=${LD_LIBRARY_PATH}\n\n\nRUN bazel build --config=opt --config=cuda  --copt=-msse4.2 //tensorflow/tools/pip_package:build_pip_package --verbose_failures --action_env=LD_LIBRARY_PATH=${LD_LIBRARY_PATH}\n\n# fix for not found script https://github.com/tensorflow/tensorflow/issues/471\nRUN ./configure\n\n# build wheel\nRUN bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n\n# install tensorflow from our custom wheel\nRUN pip install /tmp/tensorflow_pkg/*.whl\n\n# BUILD TensorFlow+XLA />\n\n# copy built libs to /DeepSpeech/native_client\nRUN cp /tensorflow/bazel-bin/native_client/libctc_decoder_with_kenlm.so /DeepSpeech/native_client/ \\\n    && cp /tensorflow/bazel-bin/native_client/generate_trie /DeepSpeech/native_client/ \\\n    && cp /tensorflow/bazel-bin/native_client/libdeepspeech.so /DeepSpeech/native_client/ \\\n    && cp /tensorflow/bazel-bin/native_client/libdeepspeech_utils.so /DeepSpeech/native_client/\n \n\n# build deepspeech and install python bindings\nENV TFDIR /tensorflow\nWORKDIR /DeepSpeech/native_client\nRUN make deepspeech\nRUN make bindings\nRUN pip install dist/deepspeech*\n\n\n\n\n# allow python printing utf-8\nENV PYTHONIOENCODING UTF-8\n\n# build kenlm\nWORKDIR /DeepSpeech/data\nRUN mkdir lm && cd lm && git clone https://github.com/kpu/kenlm && cd kenlm \\\n    && mkdir eigen3 \\\n    && export EIGEN3_ROOT=/DeepSpeech/data/lm/kenlm/eigen3 \\\n    && cd $EIGEN3_ROOT && wget -O - https://bitbucket.org/eigen/eigen/get/3.2.8.tar.bz2 |tar xj && cd - \\\n    && mkdir -p build \\\n    && cd build \\\n    && cmake .. \\\n    && make -j 4\n\nWORKDIR /DeepSpeech\n",
			"file": "Dockerfile.xla",
			"file_size": 5340,
			"file_write_time": 131665618110000000,
			"settings":
			{
				"buffer_size": 5341,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/run-yt-subs-rus.sh",
			"settings":
			{
				"buffer_size": 809,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ds.sublime-project",
			"settings":
			{
				"buffer_size": 247,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 372.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Install Package Control"
			]
		],
		"width": 412.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/gosha/Projects/DeepSpeech",
		"/Users/gosha/Projects/DeepSpeech/bin",
		"/Users/gosha/Projects/DeepSpeech/util"
	],
	"file_history":
	[
		"/Users/gosha/Projects/DeepSpeech/bin/run-echo-msk.sh",
		"/Users/gosha/Projects/DeepSpeech/util/automation.py",
		"/Users/gosha/Projects/DeepSpeech/bin/import_voxforge_ru.py",
		"/Users/gosha/Projects/DeepSpeech/bin/run-voxforge-ru.sh",
		"/Users/gosha/Projects/DeepSpeech/bin/infer-yt-subs-rus.sh",
		"/Users/gosha/Projects/DeepSpeech/data/alphabet.txt",
		"/Users/gosha/Projects/DeepSpeech/util/feeding.py",
		"/Users/gosha/Projects/DeepSpeech/util/audio.py",
		"/Users/gosha/Projects/DeepSpeech/util/text.py",
		"/Users/gosha/Projects/DeepSpeech/requirements.txt",
		"/Users/gosha/Projects/DeepSpeech/native_client/BUILD",
		"/Users/gosha/Projects/DeepSpeech/native_client/Makefile",
		"/Users/gosha/Projects/DeepSpeech/Dockerfile_bckup",
		"/Users/gosha/Projects/DeepSpeech/bin/import_librivox.py",
		"/Users/gosha/Projects/DeepSpeech/bin/import_voxforge.py",
		"/Users/gosha/Projects/DeepSpeech/util/taskcluster.py",
		"/Users/gosha/Projects/DeepSpeech/.gitignore",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/example_keywords.txt",
		"/Users/gosha/Desktop/host_install.txt",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/yt.sublime-workspace",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/example-keywords.txt",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/videos_failed_to_process.csv",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/videos_to_process.csv",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/videos_processed.csv",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/videos_processing.csv",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/keywords_to_search.csv",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/csv_utils.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/const.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/processed_search_keywords_list.csv",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/venv/lib/python2.7/site-packages/pafy/backend_shared.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/venv/bin/ytdl",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/vad.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/venv/lib/python2.7/site-packages/youtube_dl/YoutubeDL.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/video_parser.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/data/7mn2OENp3Xg/parts.csv",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/data/uFhFr3op09Y/parts.csv",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/data/mFMZF863unk/parts.csv",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/data/hIO6v8m6xfc/parts.csv",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/data/h37C0iPGBRU/parts.csv",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/data/blSz672ZarU/parts.csv",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/venv/lib/python2.7/site-packages/pyvtt/vtttime.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/venv/lib/python2.7/site-packages/pyvtt/vttfile.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/data/blSz672ZarU/subs.ru.vtt",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/youtube_video_searcher.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/speech_utils.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/test.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/stats_util.py",
		"/Users/gosha/Library/Application Support/Sublime Text 3/Packages/Jedi - Python autocompletion/Default.sublime-keymap",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/audio_utils.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/yt.sublime-project",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/main.py",
		"/Users/gosha/Projects/youtube-audio-captions-parsing/data/tssa",
		"/Users/gosha/Desktop/writing5.2.txt",
		"/Users/gosha/Desktop/writing5.1.txt",
		"/Users/gosha/Desktop/goodnia-ipa/skyhighquizapp/index.html",
		"/Users/gosha/Projects/python_tests/image_rec_tests/test.jpg",
		"/Users/gosha/Projects/python_tests/image_rec_tests/digital_display_ocr.py",
		"/Library/Python/2.7/site-packages/PIL/__init__.py",
		"/Users/gosha/Projects/python_tests/selenium_utils.py",
		"/Library/Python/2.7/site-packages/selenium/webdriver/chrome/webdriver.py",
		"/Users/gosha/Projects/ThreeThingsToDo/Podfile",
		"/Users/gosha/Projects/python_tests/working_with_images.py",
		"/Users/gosha/Projects/MusicPlayerTestProject/Podfile",
		"/Users/gosha/Desktop/2_writing_2.txt",
		"/Users/gosha/Desktop/2_writing_1.txt",
		"/Volumes/STORAGE/TMP/SlidingWall.cs",
		"/Users/gosha/Desktop/goodnia-ipa/pegasus/.htaccess",
		"/Users/gosha/Projects/Discovery/Podfile",
		"/Users/gosha/Desktop/test.txt"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"config",
			"map",
			"XLA",
			"float32",
			"float16",
			"timedelta",
			"time",
			"main(",
			"lte",
			"LDF",
			"LD",
			"tens",
			"coda",
			"monol",
			"bazel",
			"report(",
			"train",
			"export()",
			"export",
			"remove_export",
			"report",
			"repo",
			"report",
			"Success",
			"getsize",
			"filename_of",
			"maybe_download",
			"unicodedata",
			"n_input",
			"ModelFeeder",
			"numcep",
			"range",
			"alphabet",
			"_alphabet"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Dockerfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5412,
						"regions":
						{
						},
						"selection":
						[
							[
								1999,
								2004
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 682.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "DeepSpeech.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 83098,
						"regions":
						{
						},
						"selection":
						[
							[
								70237,
								70244
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 23488.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Dockerfile.xla",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5341,
						"regions":
						{
						},
						"selection":
						[
							[
								724,
								724
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 0,
								"count": 404,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "bin/run-yt-subs-rus.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 809,
						"regions":
						{
						},
						"selection":
						[
							[
								801,
								801
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "ds.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 247,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								203
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 274.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Anaconda Python Builder",
	"project": "ds.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 311.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
